@using System.Collections.Generic
@model IlisanCommerce.Models.Product
@{
    ViewData["Title"] = "Ürün Düzenle";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
    ViewData["ProductId"] = Model?.Id ?? 0;

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h3 mb-0">Ürün Düzenle: @Model.Name</h1>
                <a href="@Url.Action("Products", "Admin")" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Geri Dön
                </a>
            </div>
        </div>
    </div>

    <form asp-action="EditProduct" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        <input asp-for="Id" type="hidden" />
        
        <div class="row">
            <div class="col-lg-8">
                <div class="card shadow mb-4 admin-card">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Temel Bilgiler</h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Name" class="form-label">Ürün Adı *</label>
                                    <input asp-for="Name" class="form-control" placeholder="Ürün adını girin" />
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="ProductCode" class="form-label">Ürün Kodu *</label>
                                    <input asp-for="ProductCode" class="form-control" placeholder="Ürün kodunu girin" />
                                    <span asp-validation-for="ProductCode" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ShortDescription" class="form-label">Kısa Açıklama *</label>
                            <textarea asp-for="ShortDescription" class="form-control" rows="3" placeholder="Ürünün kısa açıklaması"></textarea>
                            <span asp-validation-for="ShortDescription" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="LongDescription" class="form-label">Detaylı Açıklama</label>
                            <textarea asp-for="LongDescription" class="form-control" rows="5" placeholder="Ürünün detaylı açıklaması"></textarea>
                            <span asp-validation-for="LongDescription" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="card shadow mb-4 admin-card">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Fiyat ve Stok Bilgileri</h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="Price" class="form-label">Satış Fiyatı *</label>
                                    <div class="input-group">
                                        <span class="input-group-text">â‚º</span>
                                        <input asp-for="Price" class="form-control" type="number" step="0.01" placeholder="0.00" />
                                    </div>
                                    <span asp-validation-for="Price" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="ComparePrice" class="form-label">Liste Fiyatı</label>
                                    <div class="input-group">
                                        <span class="input-group-text">â‚º</span>
                                        <input asp-for="ComparePrice" class="form-control" type="number" step="0.01" placeholder="0.00" />
                                    </div>
                                    <span asp-validation-for="ComparePrice" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="CategoryId" class="form-label">Kategori *</label>
                                    <select id="CategoryId" name="CategoryId" class="form-select">
                                        <option value="">Kategori Seçin</option>
                                        @{
                                            var allCategories = ViewBag.Categories as IEnumerable<IlisanCommerce.Models.Category>;
                                            if (allCategories != null)
                                            {
                                                Func<int?, IEnumerable<IlisanCommerce.Models.Category>> getChildren = null;
                                                getChildren = parentId => allCategories.Where(c => c.ParentCategoryId == parentId).OrderBy(c => c.Name);

                                                Action<IEnumerable<IlisanCommerce.Models.Category>, int> renderOptions = null;
                                                renderOptions = (cats, level) =>
                                                {
                                                    foreach (var cat in cats)
                                                    {
                                                        var indent = new string('-', level * 2);
                                                        var selected = Model != null && Model.CategoryId == cat.Id ? "selected" : string.Empty;
                                                        @:<option value="@cat.Id" @selected>@(indent) @cat.Name</option>
                                                        var children = getChildren(cat.Id);
                                                        if (children.Any())
                                                        {
                                                            renderOptions(children, level + 1);
                                                        }
                                                    }
                                                };

                                                var roots = getChildren(null);
                                                renderOptions(roots, 0);
                                            }
                                        }
                                    </select>
                                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="StockQuantity" class="form-label">Stok Miktarı</label>
                                    <input asp-for="StockQuantity" class="form-control" type="number" />
                                    <span asp-validation-for="StockQuantity" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="MinStockLevel" class="form-label">Minimum Stok Seviyesi</label>
                                    <input asp-for="MinStockLevel" class="form-control" type="number" />
                                    <span asp-validation-for="MinStockLevel" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="Desi" class="form-label">Desi</label>
                                    <input asp-for="Desi" class="form-control" type="number" step="0.1" />
                                    <span asp-validation-for="Desi" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card shadow mb-4 admin-card">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Ürün Özellikleri</h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Brand" class="form-label">Marka</label>
                                    <input asp-for="Brand" class="form-control" />
                                    <span asp-validation-for="Brand" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Weight" class="form-label">Ağırlık</label>
                                    <input asp-for="Weight" class="form-control" placeholder="Örn: 500g" />
                                    <span asp-validation-for="Weight" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="Color" class="form-label">Renk</label>
                                    <input asp-for="Color" class="form-control" placeholder="Örn: Siyah" />
                                    <span asp-validation-for="Color" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="Size" class="form-label">Boyut</label>
                                    <input asp-for="Size" class="form-control" placeholder="Örn: L" />
                                    <span asp-validation-for="Size" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="Material" class="form-label">Malzeme</label>
                                    <input asp-for="Material" class="form-control" placeholder="Örn: Polyester" />
                                    <span asp-validation-for="Material" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Dimensions" class="form-label">Boyutlar</label>
                                    <input asp-for="Dimensions" class="form-control" placeholder="Örn: 30x20x10 cm" />
                                    <span asp-validation-for="Dimensions" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CertificateType" class="form-label">Sertifika Tipi</label>
                                    <select asp-for="CertificateType" class="form-select">
                                        <option value="">Sertifika Seçin</option>
                                        @foreach (var certType in ViewBag.CertificateTypes as List<string> ?? new List<string>())
                                        {
                                            <option value="@certType" selected="@(Model?.CertificateType == certType ? "selected" : "")">@certType</option>
                                        }
                                    </select>
                                    <span asp-validation-for="CertificateType" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    @await Html.PartialAsync("_ProductVariantsCard", Model?.ProductVariants ?? new List<IlisanCommerce.Models.ProductVariant>())
                </div>
            </div>

            <div class="col-lg-4">
                <div class="card shadow mb-4 admin-card">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Ürün Resimleri</h6>
                    </div>
                    <div class="card-body">
                        <!-- Mevcut Resimler -->
                        @if (Model.ProductImages != null && Model.ProductImages.Any())
                        {
                            <div class="mb-3">
                                <label class="form-label">Mevcut Resimler</label>
                                <div class="row">
                                    @foreach (var image in Model.ProductImages.OrderBy(i => i.SortOrder))
                                    {
                                        <div class="col-6 mb-2">
                                            <div class="position-relative">
                                                <img src="@(image.ImagePath.StartsWith("//") ? image.ImagePath.Substring(1) : (image.ImagePath.StartsWith("/") ? image.ImagePath : "/" + image.ImagePath))" alt="@image.AltText" 
                                                     style="width: 100%; height: 80px; object-fit: cover;" class="rounded" />
                                                @if (image.IsMainImage)
                                                {
                                                    <span class="badge bg-primary position-absolute top-0 start-0">Ana</span>
                                                }
                                                <div class="btn-group-vertical position-absolute top-0 end-0" style="font-size: 10px;">
                                                    @if (!image.IsMainImage)
                                                    {
                                                        <button type="button" class="btn btn-sm btn-outline-primary" 
                                                                onclick="setMainImage(@image.Id)" title="Ana Resim Yap">
                                                            <i class="fas fa-star"></i>
                                                        </button>
                                                    }
                                                    <button type="button" class="btn btn-sm btn-outline-danger" 
                                                            onclick="deleteImage(@image.Id)" title="Sil">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }

                        <!-- Professional Multi-Image Upload -->
                        <div class="mb-3">
                            <label for="newImages" class="form-label">Yeni Resimler Ekle</label>
                            <input type="file" name="newImages" id="newImages" class="form-control" accept="image/*" multiple />
                            <small class="form-text text-muted">
                                <i class="fas fa-info-circle"></i> 
                                Birden fazla yeni resim seçebilirsiniz. Mevcut resimlere eklenecektir.
                                Maksimum dosya boyutu: 5MB. Desteklenen formatlar: JPG, PNG, GIF, WebP
                            </small>
                        </div>

                        <div id="newImagePreviewContainer" class="mt-3" style="display: none;">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="text-muted">Yeni Resim Önizleme</span>
                                <button type="button" class="btn btn-sm btn-outline-danger" onclick="clearNewImages()">
                                    <i class="fas fa-trash"></i> Temizle
                                </button>
                            </div>
                            <div id="newImagePreviewGrid" class="row g-2"></div>
                        </div>
                    </div>
                </div>

                <div class="card shadow mb-4 admin-card">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">SEO Ayarları</h6>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label asp-for="Slug" class="form-label">URL Slug</label>
                            <input asp-for="Slug" class="form-control" placeholder="urun-adi-seo-dostu" id="slugInput" />
                            <small class="form-text text-muted">
                                <i class="fas fa-info-circle"></i> 
                                SEO dostu URL oluşturmak için kullanılır. Türkçe karakterler otomatik dönüştürülür.
                                Boş bırakılırsa ürün adından otomatik oluşturulur.
                            </small>
                            <span asp-validation-for="Slug" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="MetaTitle" class="form-label">Meta Başlık</label>
                            <input asp-for="MetaTitle" class="form-control" placeholder="SEO için başlık" />
                            <span asp-validation-for="MetaTitle" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="MetaDescription" class="form-label">Meta Açıklama</label>
                            <textarea asp-for="MetaDescription" class="form-control" rows="3" placeholder="SEO için açıklama"></textarea>
                            <span asp-validation-for="MetaDescription" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="card shadow mb-4 admin-card">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Durum Ayarları</h6>
                    </div>
                    <div class="card-body">
                        <div class="form-check mb-3">
                            <input asp-for="IsActive" class="form-check-input" type="checkbox" />
                            <label asp-for="IsActive" class="form-check-label">
                                Aktif
                            </label>
                        </div>

                        <div class="form-check mb-3">
                            <input asp-for="IsFeatured" class="form-check-input" type="checkbox" />
                            <label asp-for="IsFeatured" class="form-check-label">
                                Öne Çıkan Ürün
                            </label>
                        </div>

                        <div class="form-check mb-3">
                            <input asp-for="IsSpecialProduct" class="form-check-input" type="checkbox" />
                            <label asp-for="IsSpecialProduct" class="form-check-label">
                                Özel Ürün (NATO vb.)
                            </label>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ProtectionLevel" class="form-label">Koruma Seviyesi</label>
                            <select asp-for="ProtectionLevel" class="form-control">
                                <option value="">Seviye Seçin</option>
                                <option value="1">I</option>
                                <option value="2">II</option>
                                <option value="3">IIIA</option>
                                <option value="4">III</option>
                                <option value="5">IV</option>
                            </select>
                            <span asp-validation-for="ProtectionLevel" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary btn-lg btn-admin-primary" id="saveButton">
                        <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true" id="saveSpinner" style="display: none;"></span>
                        <i class="fas fa-save" id="saveIcon"></i>
                        <span id="saveText">Değişiklikleri Kaydet</span>
                    </button>
                    <a href="@Url.Action("Products", "Admin")" class="btn btn-secondary">
                        <i class="fas fa-times"></i> İptal
                    </a>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script src="~/js/admin-product-variants.js"></script>
    <script>
        $(document).ready(function() {
            // Form submission handling
            $('form').on('submit', function(e) {
                const saveButton = $('#saveButton');
                const saveSpinner = $('#saveSpinner');
                const saveIcon = $('#saveIcon');
                const saveText = $('#saveText');
                
                // Disable button and show spinner
                saveButton.prop('disabled', true);
                saveSpinner.show();
                saveIcon.hide();
                saveText.text('Kaydediliyor...');
                
                // Validate file size if image is selected
                const newImageFile = document.getElementById('newImage').files[0];
                if (newImageFile) {
                    const maxSize = 5 * 1024 * 1024; // 5MB
                    if (newImageFile.size > maxSize) {
                        e.preventDefault();
                        alert('Resim dosyası 5MB\'dan büyük olamaz.');
                        resetSaveButton();
                        return false;
                    }
                    
                    // Check file type
                    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];
                    if (!allowedTypes.includes(newImageFile.type)) {
                        e.preventDefault();
                        alert('Sadece JPG, PNG, GIF ve WebP formatlarÄ± desteklenir.');
                        resetSaveButton();
                        return false;
                    }
                }
            });
            
            function resetSaveButton() {
                const saveButton = $('#saveButton');
                const saveSpinner = $('#saveSpinner');
                const saveIcon = $('#saveIcon');
                const saveText = $('#saveText');
                
                saveButton.prop('disabled', false);
                saveSpinner.hide();
                saveIcon.show();
                saveText.text('DeÄŸiÅŸiklikleri Kaydet');
            }
        });

        // Professional multi-image upload for edit
        let newSelectedImages = [];

        document.getElementById('newImages').addEventListener('change', function(e) {
            const files = Array.from(e.target.files);
            newSelectedImages = [];
            
            if (files.length === 0) {
                document.getElementById('newImagePreviewContainer').style.display = 'none';
                return;
            }

            const maxSize = 5 * 1024 * 1024; // 5MB
            const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];
            
            files.forEach((file, index) => {
                if (!allowedTypes.includes(file.type.toLowerCase())) {
                    showToast('UyarÄ±', `"${file.name}" desteklenmeyen formatta.`, 'error');
                    return;
                }
                
                if (file.size > maxSize) {
                    showToast('UyarÄ±', `"${file.name}" Ã§ok bÃ¼yÃ¼k (max 5MB).`, 'error');
                    return;
                }
                
                newSelectedImages.push({ file, index, url: null });
            });

            if (newSelectedImages.length === 0) {
                document.getElementById('newImagePreviewContainer').style.display = 'none';
                showToast('Hata', 'HiÃ§ geÃ§erli resim bulunamadÄ±.', 'error');
                return;
            }

            generateNewImagePreviews();
            document.getElementById('newImagePreviewContainer').style.display = 'block';
            showToast('BaÅŸarÄ±lÄ±', `${newSelectedImages.length} yeni resim seÃ§ildi.`, 'success');
        });

        function generateNewImagePreviews() {
            const grid = document.getElementById('newImagePreviewGrid');
            grid.innerHTML = '';
            
            newSelectedImages.forEach((imageData, index) => {
                const reader = new FileReader();
                reader.onload = function(e) {
                    imageData.url = e.target.result;
                    
                    const col = document.createElement('div');
                    col.className = 'col-md-4 col-sm-6';
                    col.innerHTML = `
                        <div class="card image-preview-card" data-index="${index}">
                            <img src="${e.target.result}" class="card-img-top" style="height: 120px; object-fit: cover;" alt="New Image ${index + 1}">
                            <div class="card-body p-2">
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">${imageData.file.name}</small>
                                    <button type="button" class="btn btn-outline-danger btn-sm" 
                                            onclick="removeNewImage(${index})" title="Sil">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                                <div class="mt-1">
                                    <small class="text-muted">${formatFileSize(imageData.file.size)}</small>
                                    <span class="badge bg-success ms-2">Yeni</span>
                                </div>
                            </div>
                        </div>
                    `;
                    grid.appendChild(col);
                };
                reader.readAsDataURL(imageData.file);
            });
        }

        function removeNewImage(index) {
            newSelectedImages.splice(index, 1);
            
            if (newSelectedImages.length === 0) {
                document.getElementById('newImagePreviewContainer').style.display = 'none';
                document.getElementById('newImages').value = '';
                return;
            }
            
            generateNewImagePreviews();
            showToast('Bilgi', 'Resim kaldÄ±rÄ±ldÄ±.', 'info');
        }

        function clearNewImages() {
            newSelectedImages = [];
            document.getElementById('newImagePreviewContainer').style.display = 'none';
            document.getElementById('newImages').value = '';
            showToast('Bilgi', 'Yeni resimler temizlendi.', 'info');
        }

        function formatFileSize(bytes) {
            if (bytes === 0) return '0 B';
            const k = 1024;
            const sizes = ['B', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // Ana resim yapma
        function setMainImage(imageId) {
            if (confirm('Bu resmi ana resim olarak ayarlamak istediÄŸinizden emin misiniz?')) {
                const button = event.target.closest('button');
                const originalHtml = button.innerHTML;
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                button.disabled = true;
                
                fetch(`/admin/products/images/${imageId}/set-main`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value,
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showToast('BaÅŸarÄ±lÄ±', 'Ana resim baÅŸarÄ±yla ayarlandÄ±.', 'success');
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        showToast('Hata', data.message, 'error');
                        button.innerHTML = originalHtml;
                        button.disabled = false;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('Hata', 'Bir hata oluÅŸtu.', 'error');
                    button.innerHTML = originalHtml;
                    button.disabled = false;
                });
            }
        }

        // Resim silme
        function deleteImage(imageId) {
            if (confirm('Bu resmi silmek istediÄŸinizden emin misiniz?')) {
                const button = event.target.closest('button');
                const originalHtml = button.innerHTML;
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                button.disabled = true;
                
                fetch(`/admin/products/images/${imageId}/delete`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value,
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showToast('BaÅŸarÄ±lÄ±', 'Resim baÅŸarÄ±yla silindi.', 'success');
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        showToast('Hata', data.message, 'error');
                        button.innerHTML = originalHtml;
                        button.disabled = false;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('Hata', 'Bir hata oluÅŸtu.', 'error');
                    button.innerHTML = originalHtml;
                    button.disabled = false;
                });
            }
        }
        
        // Auto-generate slug from product name
        document.getElementById('Name').addEventListener('input', function() {
            const nameInput = this;
            const slugInput = document.getElementById('slugInput');
            
            // Only auto-generate if slug is empty or matches previous name
            if (!slugInput.value || slugInput.value === generateSlug(nameInput.dataset.previousValue || '')) {
                slugInput.value = generateSlug(nameInput.value);
            }
            nameInput.dataset.previousValue = nameInput.value;
        });

        function generateSlug(text) {
            if (!text) return '';
            
            return text
                .toLowerCase()
                .trim()
                // Turkish character replacements
                .replace(/ÄŸ/g, 'g')
                .replace(/Ã¼/g, 'u')
                .replace(/ÅŸ/g, 's')
                .replace(/Ä±/g, 'i')
                .replace(/Ã¶/g, 'o')
                .replace(/Ã§/g, 'c')
                // Remove special characters and replace spaces with hyphens
                .replace(/[^a-z0-9\s-]/g, '')
                .replace(/\s+/g, '-')
                .replace(/-+/g, '-')
                .replace(/^-|-$/g, '');
        }

        // Toast notification system
        function showToast(title, message, type = 'info') {
            // Create toast container if it doesn't exist
            if (!document.getElementById('toast-container')) {
                const container = document.createElement('div');
                container.id = 'toast-container';
                container.style.cssText = 'position: fixed; top: 20px; right: 20px; z-index: 9999;';
                document.body.appendChild(container);
            }
            
            const toast = document.createElement('div');
            const bgColor = type === 'success' ? 'bg-success' : type === 'error' ? 'bg-danger' : 'bg-info';
            
            toast.className = `toast align-items-center text-white ${bgColor} border-0`;
            toast.setAttribute('role', 'alert');
            toast.innerHTML = `
                <div class="d-flex">
                    <div class="toast-body">
                        <strong>${title}</strong><br>${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                </div>
            `;
            
            document.getElementById('toast-container').appendChild(toast);
            
            // Initialize and show toast
            const bsToast = new bootstrap.Toast(toast, { delay: 3000 });
            bsToast.show();
            
            // Remove toast element after it's hidden
            toast.addEventListener('hidden.bs.toast', () => {
                toast.remove();
            });
        }
    </script>
}
